<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- user_test_time -->
<mapper namespace="com.example.demo.mapper.UserTestTimeMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="userTestTimeMap" type="UserTestTime">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="rear_name" property="rearName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_time_stamp" property="createTimeStamp" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="update_time_stamp" property="updateTimeStamp" jdbcType="TIMESTAMP" />
        <result column="test_time" property="testTime" jdbcType="TIMESTAMP" />
        <result column="test_stamp" property="testStamp" jdbcType="TIMESTAMP" />
        <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        utt.id, utt.username, utt.rear_name, utt.password, utt.create_time, utt.create_time_stamp, utt.update_time, utt.update_time_stamp, 
        utt.test_time, utt.test_stamp, utt.is_delete, utt.status
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有 -->
    <select id="findUserTestTimeAll" resultMap="userTestTimeMap">
        SELECT
            <include refid="allColumns" />
        FROM user_test_time utt
    </select>
    
    <!-- 根据条件参数查询列表 -->
    <select id="findUserTestTimeByCondition" resultMap="userTestTimeMap" parameterType="map">
        SELECT
            <include refid="allColumns" />
        FROM user_test_time utt WHERE 1 = 1
        <if test="username != null and username != ''">
            AND utt.username LIKE CONCAT('%', #{username}, '%')
        </if>
        <if test="rearName != null and rearName != ''">
            AND utt.rear_name LIKE CONCAT('%', #{rearName}, '%')
        </if>
        <if test="password != null and password != ''">
            AND utt.password LIKE CONCAT('%', #{password}, '%')
        </if>
        <if test="createTime != null">
            AND utt.create_time = #{createTime}
        </if>
        <if test="createTimeStamp != null">
            AND utt.create_time_stamp = #{createTimeStamp}
        </if>
        <if test="updateTime != null">
            AND utt.update_time = #{updateTime}
        </if>
        <if test="updateTimeStamp != null">
            AND utt.update_time_stamp = #{updateTimeStamp}
        </if>
        <if test="testTime != null">
            AND utt.test_time = #{testTime}
        </if>
        <if test="testStamp != null">
            AND utt.test_stamp = #{testStamp}
        </if>
        <if test="isDelete != null">
            AND utt.is_delete = #{isDelete}
        </if>
    </select>
    
    <!-- 根据主键查询信息 -->
    <select id="getUserTestTimeById" resultMap="userTestTimeMap">
        SELECT
            <include refid="allColumns" />
        FROM user_test_time utt WHERE utt.id = #{id}
    </select>

    <!-- 根据主键查询信息 -->
    <select id="findUserTestTimeByIds" resultMap="userTestTimeMap" parameterType="list">
        SELECT
            <include refid="allColumns" />
        FROM user_test_time utt WHERE utt.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 新增信息 -->
    <insert id="addUserTestTime">
        INSERT INTO user_test_time (
            id, username, rear_name, password, create_time, create_time_stamp, update_time, update_time_stamp, 
            test_time, test_stamp, is_delete
        ) VALUES (
            #{id},
            #{username},
            #{rearName},
            #{password},
            #{createTime},
            #{createTimeStamp},
            #{updateTime},
            #{updateTimeStamp},
            #{testTime},
            #{testStamp},
            #{isDelete}
        )
    </insert>
    
    <!-- 批量新增信息 -->
    <insert id="addUserTestTimes" parameterType="list">
        INSERT INTO user_test_time (
            id, username, rear_name, password, create_time, create_time_stamp, update_time, update_time_stamp, 
            test_time, test_stamp, is_delete
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.username},
                #{item.rearName},
                #{item.password},
                #{item.createTime},
                #{item.createTimeStamp},
                #{item.updateTime},
                #{item.updateTimeStamp},
                #{item.testTime},
                #{item.testStamp},
                #{item.isDelete}
            )
        </foreach>
    </insert>
    
    <!-- 修改信息 -->
    <update id="updateUserTestTime">
        UPDATE user_test_time
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="rearName != null">
                rear_name = #{rearName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="createTimeStamp != null">
                create_time_stamp = #{createTimeStamp},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateTimeStamp != null">
                update_time_stamp = #{updateTimeStamp},
            </if>
            <if test="testTime != null">
                test_time = #{testTime},
            </if>
            <if test="testStamp != null">
                test_stamp = #{testStamp},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改信息 -->
    <update id="updateUserTestTimes" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE user_test_time
            <set>
                <if test="item.username != null">
                    username = #{item.username},
                </if>
                <if test="item.rearName != null">
                    rear_name = #{item.rearName},
                </if>
                <if test="item.password != null">
                    password = #{item.password},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime},
                </if>
                <if test="item.createTimeStamp != null">
                    create_time_stamp = #{item.createTimeStamp},
                </if>
                <if test="item.updateTime != null">
                    update_time = #{item.updateTime},
                </if>
                <if test="item.updateTimeStamp != null">
                    update_time_stamp = #{item.updateTimeStamp},
                </if>
                <if test="item.testTime != null">
                    test_time = #{item.testTime},
                </if>
                <if test="item.testStamp != null">
                    test_stamp = #{item.testStamp},
                </if>
                <if test="item.isDelete != null">
                    is_delete = #{item.isDelete}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除 -->
    <delete id="deleteUserTestTimeById" parameterType="string">
        DELETE FROM user_test_time WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除 -->
    <delete id="deleteUserTestTimeByIds" parameterType="list">
        DELETE FROM user_test_time WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>