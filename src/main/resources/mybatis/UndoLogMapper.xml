<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- undo_log -->
<mapper namespace="com.example.demo.mapper.UndoLogMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="undoLogMap" type="UndoLog">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="branch_id" property="branchId" jdbcType="BIGINT" />
        <result column="xid" property="xid" jdbcType="VARCHAR" />
        <result column="context" property="context" jdbcType="VARCHAR" />
        <result column="rollback_info" property="rollbackInfo" jdbcType="BLOB" />
        <result column="log_status" property="logStatus" jdbcType="INTEGER" />
        <result column="log_created" property="logCreated" jdbcType="TIMESTAMP" />
        <result column="log_modified" property="logModified" jdbcType="TIMESTAMP" />
        <result column="ext" property="ext" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        ul.id, ul.branch_id, ul.xid, ul.context, ul.rollback_info, ul.log_status, ul.log_created, ul.log_modified, 
        ul.ext
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有 -->
    <select id="findUndoLogAll" resultMap="undoLogMap">
        SELECT
            <include refid="allColumns" />
        FROM undo_log ul
    </select>
    
    <!-- 根据条件参数查询列表 -->
    <select id="findUndoLogByCondition" resultMap="undoLogMap">
        SELECT
            <include refid="allColumns" />
        FROM undo_log ul WHERE 1 = 1
        <if test="branchId != null">
            AND ul.branch_id = #{branchId}
        </if>
        <if test="xid != null and xid != ''">
            AND ul.xid LIKE CONCAT('%', #{xid}, '%')
        </if>
        <if test="context != null and context != ''">
            AND ul.context LIKE CONCAT('%', #{context}, '%')
        </if>
        <if test="rollbackInfo != null">
            AND ul.rollback_info = #{rollbackInfo}
        </if>
        <if test="logStatus != null">
            AND ul.log_status = #{logStatus}
        </if>
        <if test="logCreated != null">
            AND ul.log_created = #{logCreated}
        </if>
        <if test="logModified != null">
            AND ul.log_modified = #{logModified}
        </if>
        <if test="ext != null and ext != ''">
            AND ul.ext LIKE CONCAT('%', #{ext}, '%')
        </if>
    </select>
    
    <!-- 根据主键查询信息 -->
    <select id="getUndoLogById" resultMap="undoLogMap">
        SELECT
            <include refid="allColumns" />
        FROM undo_log ul WHERE ul.id = #{id}
    </select>

    <!-- 根据主键查询信息 -->
    <select id="findUndoLogByIds" resultMap="undoLogMap" parameterType="list">
        SELECT
            <include refid="allColumns" />
        FROM undo_log ul WHERE ul.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 新增信息 -->
    <insert id="addUndoLog">
        INSERT INTO undo_log (
            id, branch_id, xid, context, rollback_info, log_status, log_created, log_modified, 
            ext
        ) VALUES (
            #{id},
            #{branchId},
            #{xid},
            #{context},
            #{rollbackInfo},
            #{logStatus},
            #{logCreated},
            #{logModified},
            #{ext}
        )
    </insert>
    
    <!-- 批量新增信息 -->
    <insert id="addUndoLogs" parameterType="list">
        INSERT INTO undo_log (
            id, branch_id, xid, context, rollback_info, log_status, log_created, log_modified, 
            ext
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.branchId},
                #{item.xid},
                #{item.context},
                #{item.rollbackInfo},
                #{item.logStatus},
                #{item.logCreated},
                #{item.logModified},
                #{item.ext}
            )
        </foreach>
    </insert>
    
    <!-- 修改信息 -->
    <update id="updateUndoLog">
        UPDATE undo_log
        <set>
            <if test="branchId != null">
                branch_id = #{branchId},
            </if>
            <if test="xid != null">
                xid = #{xid},
            </if>
            <if test="context != null">
                context = #{context},
            </if>
            <if test="rollbackInfo != null">
                rollback_info = #{rollbackInfo},
            </if>
            <if test="logStatus != null">
                log_status = #{logStatus},
            </if>
            <if test="logCreated != null">
                log_created = #{logCreated},
            </if>
            <if test="logModified != null">
                log_modified = #{logModified},
            </if>
            <if test="ext != null">
                ext = #{ext}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改信息 -->
    <update id="updateUndoLogs">
        <foreach collection="list" item="item" separator=";">
            UPDATE undo_log u
                <trim prefix="set" suffixOverrides=",">
                    <if test="item.branchId != null">
                        u.branch_id = #{item.branchId},
                    </if>
                    <if test="item.xid != null">
                        xid = #{item.xid},
                    </if>
                    <if test="item.context != null">
                        u.context = #{item.context},
                    </if>
                    <if test="item.rollbackInfo != null">
                        rollback_info = #{item.rollbackInfo},
                    </if>
                    <if test="item.logStatus != null">
                        log_status = #{item.logStatus},
                    </if>
                    <if test="item.logCreated != null">
                        log_created = #{item.logCreated},
                    </if>
                    <if test="item.logModified != null">
                        log_modified = #{item.logModified},
                    </if>
                    <if test="item.ext != null">
                        ext = #{item.ext},
                    </if>
                </trim>
            WHERE u.id = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除 -->
    <delete id="deleteUndoLogById" parameterType="long">
        DELETE FROM undo_log WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除 -->
    <delete id="deleteUndoLogByIds" parameterType="list">
        DELETE FROM undo_log WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>