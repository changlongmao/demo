spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  # 环境 dev|prod
  profiles:
    active: dev
  redis:
    timeout: 6000  # 连接超时时长（毫秒）
    expire-time: 1800 # redis过期时间是30分钟30*60
    jedis:
      pool:
        max-active: 10000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 0       # 连接池中的最小空闲连接
  main:
    allow-bean-definition-overriding: true
  application:
    name: demo
server:
  tomcat:
    uri-encoding: UTF-8
    accept-count: 5000
    threads:
      max: 1024
      min-spare: 30
  port: 8990
  servlet:
    context-path: /
  shutdown: graceful


mybatis-plus:
  typeAliasesPackage: com.example.demo.entity
  mapper-locations: classpath*:mybatis/**/*.xml
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增", 1:"未设置主键类型",2:"用户输入ID (该类型可以通过自己注册自动填充插件进行填充)", 3:"全局唯一ID (idWorker), 4:全局唯一ID (UUID), 5:字符串全局唯一ID (idWorker 的字符串表示)";
      id-type: ASSIGN_ID
      #字段验证策略 IGNORED:"忽略判断", NOT_NULL:"非NULL判断", NOT_EMPTY:"非空判断", DEFAULT 默认的,一般只用于注解里(1. 在全局里代表 NOT_NULL,2. 在注解里代表 跟随全局)
      field-strategy: NOT_EMPTY
      #数据库大写下划线转换
      capital-mode: true
      #逻辑删除值
      logic-delete-value: 1
      #逻辑未删除值
      logic-not-delete-value: 0

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: on
    info:
      enabled: on
logging:
  file:
    name: logs/cr-info.log

xxl:
  job:
    executor:
      appname: ${spring.application.name}
      logpath: ${spring.application.name}/xxl-job
      logretentiondays: 30
    admin:
      addresses: http://localhost:8080/xxl-job-admin
    accessToken: c9%a16ft#pQoQH2X^ElMyzLyox9o2$dX

shenyu:
  register:
    registerType: http
    serverLists: http://localhost:9095
    props:
      username: admin
      password: Chang123.
  client:
    http:
      props:
        contextPath: /api/${spring.application.name}
        appName: ${spring.application.name}
        port: ${server.port}